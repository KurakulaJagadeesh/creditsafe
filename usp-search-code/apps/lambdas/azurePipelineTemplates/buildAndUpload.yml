parameters:
  - name: Environment
    type: string
  - name: Creds
    type: string
  - name: AppDir
    type: string
  - name: FunctionName
    type: string

jobs:
  - job: buildAndUpload
    steps:
      - checkout: self
        submodules: false
        persistCredentials: true
      - task: NodeTool@0
        displayName: "Install Node.js"
        inputs:
          versionSpec: "22.x"
      - task: Cache@2
        inputs:
          key: 'pnpm | "$(Agent.OS)" | pnpm-lock.yaml'
          path: $(Pipeline.Workspace)/.pnpm-store
        displayName: Cache pnpm
      - script: |
          corepack enable
          corepack prepare pnpm@latest-9 --activate
          pnpm config set store-dir $(Pipeline.Workspace)/.pnpm-store
        displayName: "Setup pnpm"
      - script: pnpm install --frozen-lockfile
        displayName: "pnpm install --frozen-lockfile"
      - script: pnpm run build
        displayName: "pnpm build"
        workingDirectory: "$(Build.SourcesDirectory)/apps/lambdas/${{parameters.AppDir}}/"
      - task: PublishPipelineArtifact@1
        inputs:
          targetPath: "$(Build.SourcesDirectory)/apps/lambdas/${{parameters.AppDir}}/dist/"
          artifact: "build"
          publishLocation: "pipeline"
      - task: ArchiveFiles@2
        inputs:
          rootFolderOrFile: "$(Build.SourcesDirectory)/apps/lambdas/${{parameters.AppDir}}/dist/"
          includeRootFolder: false
          archiveType: "zip"
          archiveFile: "$(Build.ArtifactStagingDirectory)/usp-${{parameters.Environment}}-${{parameters.FunctionName}}.zip"
          replaceExistingArchive: true
      - task: S3Upload@1
        inputs:
          awsCredentials: "${{parameters.Creds}}"
          regionName: "eu-west-1"
          bucketName: "usp-${{parameters.Environment}}-lambda-bucket"
          sourceFolder: "$(Build.ArtifactStagingDirectory)"
          globExpressions: "usp-${{parameters.Environment}}-${{parameters.FunctionName}}.zip"
